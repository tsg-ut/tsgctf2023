from random import randrange
import json

N = 2 ** 1024

def dot(a, b):
  return sum(map(lambda x: x[0] * x[1], zip(a, b)))

def encrypt(plain_text, secret_key):
  encrypted_text = []

  for n in secret_key:
    temp_encrypted_row = [randrange(N) for _ in range(20)]
    product = dot(secret_key, temp_encrypted_row)
    error = randrange(-N, N)
    target = (plain_text << 8) * n + error
    encrypted_row = list(map(lambda r: r * target // product, temp_encrypted_row))

    encrypted_text.append(encrypted_row)

  return encrypted_text

def decrypt(encrypted_text, secret_key):
  e = 0
  d = 0
  for enc, key in zip(encrypted_text, secret_key):
    e += dot(enc, secret_key)
    d += key << 8

  return (e + (d // 2)) // d

secret_key = [randrange(N) for _ in range(20)]
plain_text = int.from_bytes(b'TSGCTF{SECRET_GOES_HERE}', 'big')

encrypted_text = encrypt(plain_text, secret_key)

assert(decrypt(encrypted_text, secret_key) == plain_text)

with open('output.json', 'w') as f:
  json.dump(encrypted_text, f)